pub trait QueryModifier<L, DB>: WundergraphContext + Sized
where
    L: LoadingHandler<DB, Self>,
    DB: Backend + ApplyOffset + 'static,
{
    fn modify_query<'a>(
        &self,
        select: &LookAheadSelection<'_, WundergraphScalarValue>,
        query: BoxedQuery<'a, L, DB, Self>,
    ) -> Result<BoxedQuery<'a, L, DB, Self>, Error>;
}

impl<Conn, DB, T> QueryModifier<T, DB> for r2d2::PooledConnection<r2d2::ConnectionManager<Conn>>
where
    T: LoadingHandler<DB, Self>,
    Conn: Connection<Backend = DB> + 'static,
    Self: Connection<Backend = DB> + 'static,
    DB: Backend + ApplyOffset + 'static,
    T::Table: 'static,
    <T::Table as QuerySource>::FromClause: QueryFragment<DB>,
    DB::QueryBuilder: Default,
{
    fn modify_query<'a>(
        &self,
        _select: &LookAheadSelection<'_, WundergraphScalarValue>,
        query: BoxedSelectStatement<
            'a,
            SqlTypeOfPlaceholder<T::FieldList, DB, T::PrimaryKeyIndex, T::Table, Self>,
            T::Table,
            DB,
        >,
    ) -> Result<
        BoxedSelectStatement<
            'a,
            SqlTypeOfPlaceholder<T::FieldList, DB, T::PrimaryKeyIndex, T::Table, Self>,
            T::Table,
            DB,
        >,
        Error,
    > {
        Ok(query)
    }
}
